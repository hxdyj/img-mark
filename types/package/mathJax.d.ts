import transformat from './util/thansformer';
export declare const loader: {
    load: string[];
};
export declare const texPackages: {
    '[+]': string[];
};
export declare const texMacros: {
    '[': string;
    ']': string;
    '(': string;
    ')': string;
    '\u3010': string;
    '\u3011': string;
    NEarrow: string;
    NWarrow: string;
    SEarrow: string;
    SWarrow: string;
    textcircled: string;
    romannumeral: string;
    arccot: string;
    arccsc: string;
    arcsec: string;
    blackdiamond: string;
    blackheart: string;
    blackrectangle: string;
    blackstar: string;
    heart: string;
    female: string;
    male: string;
    napprox: string;
    nequiv: string;
    notni: string;
    nsubset: string;
    nsupset: string;
    oiiint: string;
    oiint: string;
    parallelequal: string;
    rectangle: string;
    smiley: string;
    wideparen: string;
    textperthousand: string;
    textregistered: string;
    textsection: string;
    texttrademark: string;
    textreferencemark: string;
    parallelogram: string;
    deletion: string;
    d: string;
    v: string;
    omitted: string;
    xmark: string;
    cmark: string;
    replace: string;
    handtextcircled: string;
    handsquare: string;
    Alpha: string;
    Beta: string;
    Omicron: string;
    Epsilon: string;
    Zeta: string;
    Eta: string;
    Iota: string;
    Kappa: string;
    Mu: string;
    Nu: string;
    Rho: string;
    Tau: string;
    Chi: string;
    lg: string;
    nl: string;
    ng: string;
};
export declare const texInlineMath: string[][];
export declare const texDisplayMath: string[][];
export declare const tex: {
    inlineMath: string[][];
    displayMath: string[][];
    packages: {
        '[+]': string[];
    };
    macros: {
        '[': string;
        ']': string;
        '(': string;
        ')': string;
        '\u3010': string;
        '\u3011': string;
        NEarrow: string;
        NWarrow: string;
        SEarrow: string;
        SWarrow: string;
        textcircled: string;
        romannumeral: string;
        arccot: string;
        arccsc: string;
        arcsec: string;
        blackdiamond: string;
        blackheart: string;
        blackrectangle: string;
        blackstar: string;
        heart: string;
        female: string;
        male: string;
        napprox: string;
        nequiv: string;
        notni: string;
        nsubset: string;
        nsupset: string;
        oiiint: string;
        oiint: string;
        parallelequal: string;
        rectangle: string;
        smiley: string;
        wideparen: string;
        textperthousand: string;
        textregistered: string;
        textsection: string;
        texttrademark: string;
        textreferencemark: string;
        parallelogram: string;
        deletion: string;
        d: string;
        v: string;
        omitted: string;
        xmark: string;
        cmark: string;
        replace: string;
        handtextcircled: string;
        handsquare: string;
        Alpha: string;
        Beta: string;
        Omicron: string;
        Epsilon: string;
        Zeta: string;
        Eta: string;
        Iota: string;
        Kappa: string;
        Mu: string;
        Nu: string;
        Rho: string;
        Tau: string;
        Chi: string;
        lg: string;
        nl: string;
        ng: string;
    };
};
declare const mathJaxConfig: {
    loader: {
        load: string[];
    };
    tex: {
        inlineMath: string[][];
        displayMath: string[][];
        packages: {
            '[+]': string[];
        };
        macros: {
            '[': string;
            ']': string;
            '(': string;
            ')': string;
            '\u3010': string;
            '\u3011': string;
            NEarrow: string;
            NWarrow: string;
            SEarrow: string;
            SWarrow: string;
            textcircled: string;
            romannumeral: string;
            arccot: string;
            arccsc: string;
            arcsec: string;
            blackdiamond: string;
            blackheart: string;
            blackrectangle: string;
            blackstar: string;
            heart: string;
            female: string;
            male: string;
            napprox: string;
            nequiv: string;
            notni: string;
            nsubset: string;
            nsupset: string;
            oiiint: string;
            oiint: string;
            parallelequal: string;
            rectangle: string;
            smiley: string;
            wideparen: string;
            textperthousand: string;
            textregistered: string;
            textsection: string;
            texttrademark: string;
            textreferencemark: string;
            parallelogram: string;
            deletion: string;
            d: string;
            v: string;
            omitted: string;
            xmark: string;
            cmark: string;
            replace: string;
            handtextcircled: string;
            handsquare: string;
            Alpha: string;
            Beta: string;
            Omicron: string;
            Epsilon: string;
            Zeta: string;
            Eta: string;
            Iota: string;
            Kappa: string;
            Mu: string;
            Nu: string;
            Rho: string;
            Tau: string;
            Chi: string;
            lg: string;
            nl: string;
            ng: string;
        };
    };
};
export { transformat as transformer, mathJaxConfig };
